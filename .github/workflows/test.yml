name:
  CI CD for python,C, C++ and Java
  #this is the name of the program
#name: Multi-Language CI/CD
#this is the action word here that will say when it is pushed on main
#on:
#    branches: [main]
#  push:
#  pull_request:
#    branches: [main]
#this tells the computer sever to run this action regardless of what branch it is
on:
  #this makes action occur on push req.
  push:
    branches: [main]
  #this makes action occur on pull req.
  pull_request:
    branches: [main]
jobs:
  build-c:
    name: test C code here
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        run: sudo apt-get install build-essential -y
      - name: install GCC
        run: gcc -o myprogram src/main.c
      - name: run program
        run: ./myprogram
  build-cpp:
    name: test Cpp code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        run: sudo apt-get install build-essential -y
      - name: use gcc to build cpp
        run: gcc -o hello_world src/main.cpp
      - name: execute program
        run: ./hello_world
#this is the top of the job file and setups jobs for the setup.
#jobs:
#this is the first job for the program
#build-c:

#name: Build and Test C Code
#sets up the name.
#runs-on: ubuntu-latest

#steps:
#  - uses: actions/checkout@v4

#   - name: Install GCC
#      run: sudo apt-get install build-essential -y

#     - name: Build C program
#        run: gcc -o my_program src/c/main.c

#      - name: Run C program
#        run: ./my_program

#  build-java:
#    name: Build and Test Java Code
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4

#- name: Set up JDK
#  uses: actions/setup-java@v4
#   with:
#      distribution: "temurin"
#       java-version: "17"

#    - name: Compile Java code
#       run: javac src/java/Main.java

# - name: Run Java program
#   run: java -cp src/java Main

#build-python:
#  name: Test Python Code
#  runs-on: ubuntu-latest
#     - uses: actions/checkout@v4
#  steps:
#
#    - name: Set up Python
#     uses: actions/setup-python@v5
#    with:
#     python-version: "3.11"

#- name: Install dependencies
# run: |
#  python -m pip install --upgrade pip
#  pip install -r requirements.txt

#- name: Run Python tests
# run: pytest

#build-rust:
#name: Build and Test Rust Code
#runs-on: ubuntu-latest
#steps:
# - uses: actions/checkout@v4

#  - name: Set up Rust
#     uses: actions-rs/toolchain@v1
#      with:
#        toolchain: stable
#         profile: minimal
#          override: true

#     - name: Build Rust project
#        run: cargo build --verbose

#      - name: Run Rust tests
#        run: cargo test --verbose
